
from scripts.utils.config.factory import sheets_names, tables_names
from scripts.utils.prepare_values_df import prepare_values_for_sheets
from scripts.utils.gspread_client import get_gspread_client
from scripts.utils.setup_logger import make_logger
from scripts.integrations.utils.tools import get_data_from_google_sheet
import gspread
import pandas as pd

logger = make_logger(__name__, use_telegram=False)


def add_barcode_from_ful_matrix_in_matrix_in_gsh(spreadshet: gspread.Spreadsheet, df: pd.DataFrame, ws: str):
    try:
        logger.info(f"üìë –û—Ç–∫—Ä—ã–≤–∞—é –ª–∏—Å—Ç: **{ws}** –≤ —Ç–∞–±–ª–∏—Ü–µ: {spreadshet.title}")
        worksheet = spreadshet.worksheet(ws)
        logger.info(f"‚úÖ –õ–∏—Å—Ç '{ws}' —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω")

        logger.info(f"üßπ –û—á–∏—â–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–∏—Å—Ç–∞ '{ws}'")

        row, col = df.shape

        worksheet.batch_clear([f"A2:{chr(64+col)}{row+1}"])

    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –õ–∏—Å—Ç '{ws}' –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π. –û—à–∏–±–∫–∞: {e}")
        worksheet = spreadshet.add_worksheet(title=ws, rows=1, cols=1)
        logger.info(f"üìÑ –ù–æ–≤—ã–π –ª–∏—Å—Ç '{ws}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")

    try:
        logger.info(
            f"‚¨ÜÔ∏è –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É DataFrame –≤ –ª–∏—Å—Ç '{ws}' ({len(df)} —Å—Ç—Ä–æ–∫, {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫)")
        worksheet.update(
            values=prepare_values_for_sheets(df),
            value_input_option="USER_ENTERED",
            range_name="A2"
        )
        logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ª–∏—Å—Ç '{ws}'")

    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç–µ '{ws}': {e}")


if __name__ == '__main__':
    gs = get_gspread_client()
    
    info_table = tables_names()

   
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥—Ñ –∏–∑ –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã –ø–æ–ª–Ω–æ–π 
    worksheet = sheets_names()['group_all_barcodes']
    df =  get_data_from_google_sheet(gs.open(info_table['wb_matrix_complete']), worksheet),

    info = {
        '–û–ó–û–ù':{
            'spreadsheet': gs.open(info_table['oz_matrix_complete']),
            'ws': worksheet
        },  
        '–†–∞—Ö–µ–ª—å':{
            'spreadsheet':  gs.open('–†–ù–ü –†–∞—Ö–µ–ª—å'),
            'ws':'API WB barcode',
        },
        '–ê–∑–∞—Ä—å—è':{
            'spreadsheet': gs.open('–†–ù–ü –ê–∑–∞—Ä—å—è'),
            'ws':'API WB barcode',
        },
    }
    
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–∞—Ä–∫–æ–¥–æ–≤ –≤–æ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã...")

    for name, conf in info.items():
        logger.info(f"üìÇ [{name}] –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–∞: {conf['ws']}")

        try:
            add_barcode_from_ful_matrix_in_matrix_in_gsh(
                conf['spreadsheet'], df, conf['ws']
            )
            logger.info(f"‚úÖ [{name}] –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –ª–∏—Å—Ç–µ '{conf['ws']}'")

        except Exception as e:
            logger.exception(f"‚ùå [{name}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")

    logger.info("üéâ –í—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    
    
# py -m scripts.integrations.add_barcode_rom_
