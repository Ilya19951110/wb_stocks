"""
üìä –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ Ozon + WB ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–≥—Ä—É–∑–∫–∞

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Google Sheets –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –ø–æ Ozon –∏ Wildberries.
–û–Ω –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç –Ω—É–∂–Ω—ã–µ –ª–∏—Å—Ç—ã, —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –ø–æ –ò–ü, –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∏—Ç–æ–≥–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π.

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:
    - gspread             ‚Üí –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets API
    - pandas              ‚Üí –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    - colorlog, logging   ‚Üí –¥–ª—è —Ü–≤–µ—Ç–Ω—ã—Ö –ª–æ–≥–æ–≤ –∏ –æ—Ç–ª–∞–¥–∫–∏
    - gspread_dataframe   ‚Üí –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ pandas DataFrame –≤ Google Sheets

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üîÅ –û–±—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å:

1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü:
   - '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ü–æ–ª–Ω–∞—è' (WB)
   - '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ OZON' (Ozon)

2. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø–æ –ò–ü:
   - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–æ–Ω–∫–µ "–ò–ü"
   - –°–±–æ—Ä —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ –±–∞—Ä–∫–æ–¥–æ–≤

3. –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –∏—Ç–æ–≥–æ–≤—ã–µ Google-—Ç–∞–±–ª–∏—Ü—ã:
   - –û—á–∏—â–∞—é—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
   - –ó–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç—Ä–∏ –ª–∏—Å—Ç–∞:
       ‚Ä¢ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ OZ
       ‚Ä¢ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB
       ‚Ä¢ –ë–∞—Ä–∫–æ–¥–∞ OZ

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üßæ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ table_entrepreneur:

    {
        '–§–∏–Ω –º–æ–¥–µ–ª—å –ò–æ—Å–∏—Ñ–æ–≤—ã –† –ê –ú': ('Gabriel', ['–†–∞—Ö–µ–ª—å', '–ú–∏—Ö–∞–∏–ª', '–ê–∑–∞—Ä—å—è']),
        '–§–∏–Ω –º–æ–¥–µ–ª—å –ì–∞–ª–∏–ª–æ–≤–∞':       ('Havva',   ['–ì–∞–ª–∏–ª–æ–≤–∞']),
        '–§–∏–Ω –º–æ–¥–µ–ª—å –ú–∞—Ä—Ç—ã–Ω–µ–Ω–∫–æ':     ('Ucare',   ['–ú–∞—Ä—Ç—ã–Ω–µ–Ω–∫–æ']),
    }

    –ö–ª—é—á ‚Äî –∏–º—è —Ü–µ–ª–µ–≤–æ–π –∏—Ç–æ–≥–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
    –ó–Ω–∞—á–µ–Ω–∏–µ ‚Äî –∫–æ—Ä—Ç–µ–∂: (–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ Ozon, —Å–ø–∏—Å–æ–∫ –ò–ü –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ WB)

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üñáÔ∏è –§—É–Ω–∫—Ü–∏–∏:

‚ñ™ request_oz_and_wb_product_range_matrix()
    ‚Üí –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: —Å–ª–æ–≤–∞—Ä—å —Ç–∞–±–ª–∏—Ü + –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–∏—Å—Ç–æ–≤ + –∫–ª–∏–µ–Ω—Ç gspread

‚ñ™ upload_to_sheet(data_dict, sheet_directory_oz, worksheet_barcode_oz, sheet_directory_wb, gs)
    ‚Üí –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏ –±–∞—Ä–∫–æ–¥—ã –≤ —Ü–µ–ª–µ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üìå –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –°–æ–∑–¥–∞–Ω–Ω—ã–π –∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π Google Service Account
    - –í–∞–ª–∏–¥–Ω—ã–π key.json
    - –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–∞–º —á–µ—Ä–µ–∑ e-mail —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    - –ù–∞–ª–∏—á–∏–µ —Å—Ç–æ–ª–±—Ü–∞ "–ò–ü" –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üí° –°–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:
    - –î–æ–±–∞–≤–∏—Ç—å Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    - –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥-—Ñ–∞–π–ª –∏–ª–∏ –ª–∏—Å—Ç Google
    - –í—ã–Ω–µ—Å—Ç–∏ table_entrepreneur –≤ YAML/JSON
    - –í—Å—Ç—Ä–æ–∏—Ç—å –≤ GitHub Actions –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üîß –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:

‚ñ™ get_gspread_client()
    ‚Üí –ò–∑ –º–æ–¥—É–ª—è scripts.gspread_client
    ‚Üí –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Google Sheets API —á–µ—Ä–µ–∑ service account

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

üßë‚Äçüíª –ê–≤—Ç–æ—Ä: –ò–ª—å—è
"""
from scripts.utils.prepare_values_df import prepare_values_for_sheets
from scripts.utils.config.factory import get_client_info, tables_names, sheets_names
from scripts.utils.gspread_client import get_gspread_client
from scripts.utils.telegram_logger import send_tg_message
from scripts.utils.setup_logger import make_logger
from datetime import datetime
import pandas as pd
import gspread
from gspread.utils import rowcol_to_a1

logger = make_logger(__name__, use_telegram=False)


def request_oz_and_wb_product_range_matrix() -> tuple[dict[str, pd.DataFrame], str, str, gspread.client.Client]:

    gs = get_gspread_client()

    table_entrepreneur = get_client_info()['finmodel_map']

    wb_matrix = tables_names()['wb_matrix_complete']
    oz_matrix = tables_names()['oz_matrix_complete']

    # upload_worksheet_directory_oz
    spreadsheet_wb = gs.open(wb_matrix)
    spreadsheet_oz = gs.open(oz_matrix)

    sheet_directory_wb = sheets_names()['directory_wb']
    sheet_directory_oz = sheets_names()['directory_oz']
    worksheet_barcode_oz = sheets_names()['barcodes_oz']

    wb_directory_worksheet = spreadsheet_wb.worksheet(
        sheet_directory_wb)

    oz_directory_worksheet = spreadsheet_oz.worksheet(
        sheet_directory_oz)

    oz_directory_barcode = spreadsheet_oz.worksheet(
        worksheet_barcode_oz)

    get_date_directory_wb = wb_directory_worksheet.get_all_values()
    get_date_directory_oz = oz_directory_worksheet.get_all_values()
    get_date_barcode_oz = oz_directory_barcode.get_all_values()

    # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ü–æ–ª–Ω–∞—è –∏–∑ –ª–∏—Å—Ç–∞ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB
    df_directory_wb = pd.DataFrame(
        get_date_directory_wb[1:], columns=get_date_directory_wb[0]
    )

    # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ OZON –∏–∑ –ª–∏—Å—Ç–∞ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ OZ
    df_directory_oz = pd.DataFrame(
        get_date_directory_oz[1:], columns=get_date_directory_oz[0])

    # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ OZON –ë–∞—Ä–∫–æ–¥–∞ OZ
    df_barcode = pd.DataFrame(
        get_date_barcode_oz[1:], columns=get_date_barcode_oz[0])

    if "–ò–ü" not in df_directory_oz.columns or "–ò–ü" not in df_directory_wb.columns:
        msg = "‚ùå –í —Ç–∞–±–ª–∏—Ü–µ –Ω–µ—Ç —Å—Ç–æ–ª–±—Ü–∞ '–ò–ü'"
        send_tg_message(msg)
        raise ValueError(msg)

    res = {
        table: (df_directory_oz[df_directory_oz['–ò–ü'] == oz_names],
                df_directory_wb[df_directory_wb['–ò–ü'].isin(wb_name)],
                df_barcode
                )
        for table, (oz_names, wb_name) in table_entrepreneur.items()
    }

    return res, sheet_directory_oz, worksheet_barcode_oz, sheet_directory_wb, gs


def upload_to_sheet(data_dict: dict[str, tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]],
                    sheet_directory_oz: str, worksheet_barcode_oz: str, sheet_directory_wb: str, gs: gspread.client.Client) -> None:

    for table, (oz_directory, wb_directory, barcode) in data_dict.items():
        try:
            logger.info(f"–ü—Ä–æ–±—É—é –æ—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É: {table}")
            # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            upload_spreadsheet = gs.open(table)

            # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–∏—Å—Ç –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ OZ
            upload_worksheet_directory_oz = upload_spreadsheet.worksheet(
                sheet_directory_oz)
            # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–∏—Å—Ç –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB
            upload_worksheet_directory_wb = upload_spreadsheet.worksheet(
                sheet_directory_wb)
            # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–∏—Å—Ç –ë–∞—Ä–∫–æ–¥–∞ OZ
            upload_worksheet_barcode = upload_spreadsheet.worksheet(
                worksheet_barcode_oz)

        except Exception as e:
            msg = f'–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫: {table}\n{e}'
            send_tg_message(msg)
            logger.error(msg)

        try:
            row, col = oz_directory.shape
            end_cell = rowcol_to_a1(row + 1, col)
            logger.debug(f"–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ OZ end_cell: {end_cell}".upper())

            upload_worksheet_directory_oz.batch_clear([f"A2:{end_cell}"])

           
            logger.info(f'–í—ã–≥—Ä—É–∂–∞—é –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ OZ –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É: {table}')

            upload_worksheet_directory_oz.update(
                values=prepare_values_for_sheets(oz_directory),
                value_input_option="USER_ENTERED",
                range_name='A2'
            )

            logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤: {table}")

        except Exception as e:
            msg = f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ {table}: {e}'
            send_tg_message(msg)
            logger.error(msg)

        try:
            logger.info(f'–í—ã–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB: {table}')
            row, col = wb_directory.shape
            end_cell = rowcol_to_a1(row + 1, col)
            logger.debug(f"–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB end_cell: {end_cell}".upper())

            upload_worksheet_directory_wb.batch_clear([f"A2:{end_cell}"])

            upload_worksheet_directory_wb.update(
                values=prepare_values_for_sheets(wb_directory),
                value_input_option="USER_ENTERED",
                range_name="A2"
            )

            logger.info(f'–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB –≤—ã–≥—Ä—É–∂–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É: {table}')
        except Exception as e:
            msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ WB' –≤ {table}: {e}"
            send_tg_message(msg)
            logger.error(msg)

        try:
            row, col = barcode.shape
            end_cell = rowcol_to_a1(row + 1, col)
            logger.info(f'–û—á–∏—â–∞—é –¥–∏–∞–ø–æ–∑–æ–Ω –ª–∏—Å—Ç–∞: {worksheet_barcode_oz}')

            upload_worksheet_barcode.batch_clear([f"A2:{rowcol_to_a1(f"A2:{end_cell}", 3)}"])

            logger.info(
                f'–û—á–∏—â–µ–Ω –¥–∏–∞–ø–æ–∑–æ–Ω: {end_cell} –≤ {table}, –ª–∏—Å—Ç {worksheet_barcode_oz}')

            logger.info(f'–í—ã–≥—Ä—É–∂–∞—é –ë–∞—Ä–∫–æ–¥–∞ OZ –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É: {table}')

            upload_worksheet_barcode.update(
                [barcode.columns.tolist()] +
                prepare_values_for_sheets(barcode),
                value_input_option="USER_ENTERED",
                range_name='A2'
            )

            logger.info(
                f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ª–∏—Å—Ç {worksheet_barcode_oz} —Ç–∞–±–ª–∏—Ü—ã {table}")

        except Exception as e:
            msg = f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ {table}: {e}'
            send_tg_message(msg)
            logger.error(msg)

    logger.info("üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")


if __name__ == '__main__':
    send_tg_message(
        f"üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω 'req_directory_wb_and_oz': {datetime.now():%Y-%m-%d %H:%M:%S}")

    result_dict, oz_sheet, oz_barcode_sheet, wb_sheet, gs = request_oz_and_wb_product_range_matrix()

    upload_to_sheet(
        data_dict=result_dict,
        sheet_directory_oz=oz_sheet,
        worksheet_barcode_oz=oz_barcode_sheet,
        sheet_directory_wb=wb_sheet,
        gs=gs
    )
# C:\Users\Ilya\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\Iosifovy\ py -m scripts.integrations.directory_wb_and_oz
