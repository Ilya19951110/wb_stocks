from scripts.integrations.utils.tools import get_data_from_google_sheet
from scripts.utils.gspread_client import get_gspread_client
import gspread
from scripts.utils.prepare_values_df import prepare_values_for_sheets
from scripts.utils.config.factory import sheets_names, tables_names
import pandas as pd
from scripts.utils.setup_logger import make_logger
logger = make_logger(__name__, use_telegram=False)

info_table = tables_names()
info_sheet = sheets_names()


def filtered_data_from_google_sheets(df: pd.DataFrame, filter_data: str):

    if '–ò–ü' not in df.columns.tolist():
        logger.warning('–Ω–µ—Ç—É')

    df = df[df['–ò–ü'] == filter_data]

    logger.info('–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ n —Å—Ç—Ä–æ–∫ ')
    return df


def add_data_from_google_sheets(spreadsheet: gspread.Spreadsheet, ws: str, df: pd.DataFrame):
    try:
        logger.info(f"üìë –û—Ç–∫—Ä—ã–≤–∞—é –ª–∏—Å—Ç '{ws}' –≤ —Ç–∞–±–ª–∏—Ü–µ '{spreadsheet.title}'")
        worksheet = spreadsheet.worksheet(ws)

        logger.info(f"üßπ –û—á–∏—â–∞—é –ª–∏—Å—Ç '{ws}' –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö")
        worksheet.clear()
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –õ–∏—Å—Ç '{ws}' –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π. –û—à–∏–±–∫–∞: {e}")
        worksheet = spreadsheet.add_worksheet(title=ws, cols=1, rows=1)

    try:
        logger.info(
            f"‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∂–∞—é DataFrame –≤ –ª–∏—Å—Ç '{ws}' "
            f"({len(df)} —Å—Ç—Ä–æ–∫, {len(df.columns)} —Å—Ç–æ–ª–±—Ü–æ–≤)"
        )

        worksheet.update(
            [df.columns.tolist()] + prepare_values_for_sheets(df),
            value_input_option='USER_ENTERED'
        )

        logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—Å—Ç '{ws}'")

    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ª–∏—Å—Ç–∞ '{ws}': {e}")


if __name__ == '__main__':
    # –†–ù–ü –ê–∑–∞—Ä—å—è
    Azarya_filter_data = '–ê–∑–∞—Ä—å—è'
    Rachel_filter_data = '–†–∞—Ö–µ–ª—å'
    gs = get_gspread_client()

    Rachel_download_table = '–†–ù–ü –†–∞—Ö–µ–ª—å'
    Azarya_download_table = '–†–ù–ü –ê–∑–∞—Ä—å—è'
    WB_MATRIX_SPREADSHEET = gs.open(info_table['wb_matrix_complete'])
    all_directory_wb = get_data_from_google_sheet(
        WB_MATRIX_SPREADSHEET, info_sheet['directory_wb'])

    AZARYA_SPREADSHEET = gs.open(Azarya_download_table)
    RACHEL_SPREADSHEET = gs.open(Rachel_download_table)

    add_data_from_google_sheets(
        AZARYA_SPREADSHEET,
        info_sheet['directory_wb'],
        filtered_data_from_google_sheets(all_directory_wb, Azarya_filter_data),
    )

    add_data_from_google_sheets(
        RACHEL_SPREADSHEET,
        info_sheet['directory_wb'],
        filtered_data_from_google_sheets(all_directory_wb, Rachel_filter_data),
    )


# py -m scripts.integrations.directory_wb_and_oz_v2
