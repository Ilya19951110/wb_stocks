from scripts.utils.gspread_client import get_gspread_client
from gspread_dataframe import set_with_dataframe
from scripts.utils.config.factory import sheets_names, tables_names
from scripts.utils.telegram_logger import send_tg_message
from scripts.utils.prepare_values_df import prepare_values_for_sheets
from scripts.utils.setup_logger import make_logger
import pandas as pd
from gspread.utils import rowcol_to_a1


logger = make_logger(__name__, use_telegram=False)


def price_transfer_from_am_in_am_oz() -> None:
    
    gs = get_gspread_client()

    table_matrix_wb = tables_names()['wb_matrix_complete']
    table_matrix_oz = tables_names()['oz_matrix_complete']

    sheet_name = sheets_names()['directory_wb']

    logger.info(f"üöÄ –°—Ç–∞—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö: `{sheet_name}`")
    try:
        logger.info(
            "üìÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã: '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ü–æ–ª–Ω–∞—è' –∏ '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ OZON'")
        transfer_spreadsheet = gs.open(table_matrix_wb)
        transfer_sheet = transfer_spreadsheet.worksheet(sheet_name)

        download_spreadsheet = gs.open(table_matrix_oz)
        download_sheet = download_spreadsheet.worksheet(sheet_name)

    except Exception as e:
        msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü –∏–ª–∏ –ª–∏—Å—Ç–æ–≤: {e}"
        send_tg_message(msg)
        logger.error(msg)
        return

    try:
        logger.info(f"‚¨áÔ∏è –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ `{sheet_name}`")
        transfer_data = transfer_sheet.get_all_values()

        df_transfer = pd.DataFrame(transfer_data[1:], columns=transfer_data[0])
        logger.info(
            f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å—á–∏—Ç–∞–Ω—ã: {df_transfer.shape[0]} —Å—Ç—Ä–æ–∫, {df_transfer.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")

    except Exception as e:
        msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–ª–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"
        send_tg_message(msg)
        logger.error(msg)
        return

    try:
        logger.info("üßπ –û—á–∏—â–∞–µ–º —Ü–µ–ª–µ–≤–æ–π –ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π –¥–∞–Ω–Ω—ã—Ö")

        row, col = df_transfer.shape
        end_cell = rowcol_to_a1(row+1, col)
        download_sheet.batch_clear([f"A2:{end_cell}"])
        
        logger.info("üì§ –í—ã–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ '–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ OZON'")

        download_sheet.update(
                values=prepare_values_for_sheets(df_transfer),
                value_input_option="USER_ENTERED",
                range_name='A2'
            )
        logger.info(
            f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ `{sheet_name}` –≤ —Ç–∞–±–ª–∏—Ü–µ OZON")
    except Exception as e:
        msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets: {e}"
        send_tg_message(msg)
        logger.error(msg)
        return

    send_tg_message("üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –±–µ–∑ –æ—à–∏–±–æ–∫ ‚úÖ")


if __name__ == '__main__':
    send_tg_message(f"üöÄ –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ `price_transfer_from_am_in_am_oz`")
    price_transfer_from_am_in_am_oz()
# py -m scripts.integrations.price_transfer_in_oz
