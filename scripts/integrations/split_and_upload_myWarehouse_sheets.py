import pandas as pd
from scripts.utils.gspread_client import get_gspread_client
from scripts.utils.setup_logger import make_logger
from scripts.utils.config.factory import get_group_map, get_assortment_matrix_complete
from gspread_dataframe import set_with_dataframe


logger = make_logger(__name__, use_telegram=True)


def upload_mywerehouse_in_gsheets(sheet_name='API –ú–æ–π —Å–∫–ª–∞–¥') -> None:

    try:

        table_name = get_assortment_matrix_complete()
        gs = get_gspread_client()
        logger.info("üîë GSpread –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        spreadsheet = gs.open(table_name)
        worksheet = spreadsheet.worksheet(sheet_name)
        mywarehouse = worksheet.get_all_values()

        house_df = pd.DataFrame(mywarehouse[1:], columns=mywarehouse[0])

        logger.info(
            f"üì• –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(house_df)} —Å—Ç—Ä–æ–∫ –∏–∑ '{sheet_name}' –≤ '{table_name}'")

    except Exception:
        logger.exception(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ GSpread –∏–ª–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
        return

    try:

        for table in get_group_map().keys():
            logger.info(f"üìÇ –†–∞–±–æ—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π: '{table}'")
            sh = gs.open(table)

            work_sheets = [ws.title for ws in sh.worksheets()]
            logger.info(
                f"üîé –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ –ª–∏—Å—Ç–∞: '{sheet_name}' –≤ —Ç–∞–±–ª–∏—Ü–µ '{table}'")

            if sheet_name in work_sheets:
                logger.info("‚úÖ –õ–∏—Å—Ç –Ω–∞–π–¥–µ–Ω ‚Äî –æ–±–Ω–æ–≤–ª—è—é —Ä–∞–∑–º–µ—Ä –ø–æ–¥ DataFrame")
                wsheet = sh.worksheet(sheet_name)

                wsheet.resize(
                    rows=house_df.shape[0],
                    cols=house_df.shape[1]
                )
            else:
                logger.warning("üÜï –õ–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π")
                wsheet = sh.add_worksheet(
                    title=sheet_name, rows=house_df.shape[0], cols=house_df.shape[1])

    except Exception:
        logger.exception("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–∞–±–ª–∏—Ü –∏–∑ get_group_map")

    try:
        logger.info("üßº –û—á–∏—â–∞—é –ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π")
        wsheet.clear()

        logger.info("üì§ –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –≤ Google Sheet...")
        set_with_dataframe(
            wsheet,
            house_df,
            row=1,
            col=1,
            include_column_header=True,
            include_index=False
        )

        logger.info(f"üéâ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É: '{table}'")

    except Exception:
        logger.exception("‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∏—Å—Ç")

    logger.info("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! üü¢")


upload_mywerehouse_in_gsheets()
# python -m scripts.integrations.split_and_upload_myWarehouse_sheets
