from scripts.utils.config.factory import tables_names, sheets_names
from scripts.utils.gspread_client import get_gspread_client
from scripts.utils.telegram_logger import send_tg_message
from scripts.utils.config.factory import sheets_names
from scripts.utils.setup_logger import make_logger
from gspread_dataframe import set_with_dataframe
import pandas as pd


logger = make_logger(__name__, use_telegram=False)


def transfer_wb_barcodes_to_oz_sheet(clear_range=['A:B']) -> None:
    """
    üì¶ –ü–µ—Ä–µ–Ω–æ—Å –±–∞—Ä–∫–æ–¥–æ–≤ –∏–∑ WB –≤ —Ç–∞–±–ª–∏—Ü—É OZON (Google Sheets)

    –°–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –±–∞—Ä–∫–æ–¥–∞–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    ¬´–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ü–æ–ª–Ω–∞—è¬ª (WB) –≤ —Ü–µ–ª–µ–≤–æ–π –ª–∏—Å—Ç —Ç–∞–±–ª–∏—Ü—ã ¬´–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ OZON¬ª.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ —à—Ç—Ä–∏—Ö–∫–æ–¥–æ–≤ –º–µ–∂–¥—É –¥–≤—É–º—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏ ‚Äî WB –∏ OZON.

    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

    üì• –ò—Å—Ç–æ—á–Ω–∏–∫:
    - –¢–∞–±–ª–∏—Ü–∞: –ø–æ–ª—É—á–∞–µ–º–∞—è —á–µ—Ä–µ–∑ `get_assortment_matrix_complete()`
    - –õ–∏—Å—Ç: –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –∫–ª—é—á—É `group_all_barcodes` –∏–∑ `sheets_names()`
    - –°—Ç–æ–ª–±—Ü—ã: —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ê—Ä—Ç–∏–∫—É–ª" –∏ "–ë–∞—Ä–∫–æ–¥")

    üì§ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
    - –¢–∞–±–ª–∏—Ü–∞: –ø–æ–ª—É—á–∞–µ–º–∞—è —á–µ—Ä–µ–∑ `get_assortment_matrix_complete_OZON()`
    - –õ–∏—Å—Ç: –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ –∫–ª—é—á—É `barcodes_wb_oz` –∏–∑ `sheets_names()`
    - –î–∏–∞–ø–∞–∑–æ–Ω –æ—á–∏—Å—Ç–∫–∏: –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é `['A:B']`

    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

    üìå –û—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏:

    1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Google Sheets —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç.
    2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ WB –∏ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –Ω—É–∂–Ω–æ–≥–æ –ª–∏—Å—Ç–∞.
    3. –û—á–∏—Å—Ç–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≤ —Ü–µ–ª–µ–≤–æ–º –ª–∏—Å—Ç–µ OZON.
    4. –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑ –∏–Ω–¥–µ–∫—Å–æ–≤).
    5. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ Telegram.

    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

    üì¶ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
    - `get_gspread_client()` ‚Üí –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google API
    - `set_with_dataframe()` ‚Üí –∑–∞–ø–∏—Å—å DataFrame –≤ –ª–∏—Å—Ç Google Sheets
    - `sheets_names()` ‚Üí –∫–ª—é—á–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∏—Å—Ç–æ–≤
    - `get_assortment_matrix_complete[_OZON]()` ‚Üí –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    - `send_tg_message()` ‚Üí —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö/—É—Å–ø–µ—Ö–µ
    - `make_logger()` ‚Üí –ª–æ–≥–≥–µ—Ä —Å —Ü–≤–µ—Ç–Ω–æ–π –∫–æ–Ω—Å–æ–ª—å—é –∏ Telegram-–ª–æ–≥–∞–º–∏

    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

    üí° –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    - –î–∞–Ω–Ω—ã–µ –∏–∑ WB —á–∏—Ç–∞—é—Ç—Å—è –∏–∑ –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞.
    - –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è.
    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç —Å–æ–æ–±—â–∞–µ—Ç –≤ Telegram –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.

    üßë‚Äçüíª –ê–≤—Ç–æ—Ä: –ò–ª—å—è  
    üìÖ –í–µ—Ä—Å–∏—è: –ò—é–ª—å 2025
    """

    try:
        logger.info("üîå –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ GSpread –∫–ª–∏–µ–Ω—Ç—É...")

        gs = get_gspread_client()

        wsheet = sheets_names()['barcodes_wb_oz']
        table_matrix_oz = tables_names()['oz_matrix_complete']

        logger.info(f"üîë –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Ç–∞–±–ª–∏—Ü–µ OZ: {table_matrix_oz}")
    except Exception:
        msg = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GSpread –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ —Ç–∞–±–ª–∏—Ü—ã OZ"
        send_tg_message(msg)
        logger.exception(msg)
        return

    def connecting_to_amatrix_wb() -> pd.DataFrame:

        sheet_name = sheets_names()['group_all_barcodes']
        try:
            logger.info(f"üì• –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã WB: {sheet_name}")

            table_matrix_wb = tables_names()['wb_matrix_complete']
            spreadsheet = gs.open(table_matrix_wb)

            worksheet = spreadsheet.worksheet(sheet_name)

            barcode = [row[:2] for row in worksheet.get_all_values()]

            df_barcode = pd.DataFrame(barcode[1:], columns=barcode[0])

            logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã WB")
            return df_barcode

        except Exception:
            msg = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã WB"
            send_tg_message(msg)
            logger.exception(msg)
            return
    try:
        spreadsheet_oz = gs.open(table_matrix_oz)

        wsheet_oz = spreadsheet_oz.worksheet(wsheet)
        logger.info(f"üìÑ –ù–∞–π–¥–µ–Ω –ª–∏—Å—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: '{wsheet}'")

    except Exception:
        msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –∏–ª–∏ –ª–∏—Å—Ç–∞ '{wsheet}' –≤ OZ"
        send_tg_message(msg)
        logger.exception(msg)
        return

    try:
        logger.info(f"üßπ –û—á–∏—â–∞—é –¥–∏–∞–ø–∞–∑–æ–Ω {clear_range} –≤ –ª–∏—Å—Ç–µ '{wsheet}'")
        wsheet_oz.batch_clear(clear_range)

        df = connecting_to_amatrix_wb()

        if df.empty:
            msg = "‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –∏–∑ WB –ø—É—Å—Ç—ã, –≤—ã–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
            logger.warning(msg)
            send_tg_message(msg)
            return

        set_with_dataframe(
            wsheet_oz,
            df,
            row=1,
            col=1,
            include_column_header=True,
            include_index=False
        )
        logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –≤ '{wsheet}'")
    except Exception:
        msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç '{wsheet}'"
        logger.exception(msg)
        send_tg_message(msg)

    send_tg_message(f"‚úÖ –ë–∞—Ä–∫–æ–¥—ã WB —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ '{wsheet}'")


if __name__ == '__main__':
    send_tg_message("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É –±–∞—Ä–∫–æ–¥–æ–≤ WB ‚Üí OZ")

    transfer_wb_barcodes_to_oz_sheet()
