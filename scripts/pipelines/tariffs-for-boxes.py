from scripts.utils.gspread_client import get_gspread_client
from scripts.utils.config.factory import get_requests_url_wb
from utils.config.factory import sheets_names, tables_names
from gspread_dataframe import set_with_dataframe
from scripts.utils.telegram_logger import send_tg_message
import pandas as pd
import requests
import os


def tariffs_for_boxes(clear_range: list[str] = ['A:H']) -> None:
    """
    üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ WB –ø–æ –∫–æ—Ä–æ–±–∞–º –≤ Google –¢–∞–±–ª–∏—Ü—É

    –°–∫—Ä–∏–ø—Ç –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ API Wildberries, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º
    –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–æ–±–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö. –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ª–∏—Å—Ç
    Google –¢–∞–±–ª–∏—Ü—ã, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞—è —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    ----------
    clear_range : list[str], optional
        –î–∏–∞–ø–∞–∑–æ–Ω —è—á–µ–µ–∫ –≤ Google Sheets, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—á–∏—Å—Ç–∏—Ç—å –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö.
        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—á–∏—â–∞–µ—Ç—Å—è –¥–∏–∞–ø–∞–∑–æ–Ω 'A:H'.

    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
    -----------
    1. –ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ `get_gspread_client()` –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—ã–π –ª–∏—Å—Ç.
    2. –ü–æ–ª—É—á–∞–µ—Ç API-–∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è `Rachel` –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ WB API.
    3. –î–µ–ª–∞–µ—Ç GET-–∑–∞–ø—Ä–æ—Å –∫ endpoint `tariffs_box` –∏ –ø–∞—Ä—Å–∏—Ç JSON-–æ—Ç–≤–µ—Ç.
    4. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ `pandas.DataFrame`, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ –∏ –ø—Ä–∏–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
       –∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É (–∑–∞–º–µ–Ω–∞ '-' –Ω–∞ 0, ',' –Ω–∞ '.').
    5. –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è `dtNextBox` –∏ `dtTillMax` ‚Äî –¥–∞—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç–∞—Ä–∏—Ñ–æ–≤.
    6. –û—á–∏—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –Ω–∞ –ª–∏—Å—Ç–µ Google Sheets.
    7. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É.

    –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
    ------------
    - `get_gspread_client()` ‚Äî –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google Sheets API
    - `get_requests_url_wb()` ‚Äî —Å–ª–æ–≤–∞—Ä—å —Å endpoint'–∞–º–∏ WB API
    - `sheets_names()` –∏ `tables_names()` ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ –∏ —Ç–∞–±–ª–∏—Ü
    - `set_with_dataframe()` ‚Äî –≤—ã–≥—Ä—É–∑–∫–∞ pandas.DataFrame –≤ Google –¢–∞–±–ª–∏—Ü—É
    - `send_tg_message()` ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
    - `os.getenv('Rachel')` ‚Äî —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API WB

    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:
    ------------
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è Telegram-—Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞.
    - –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.

    –ê–≤—Ç–æ—Ä:
    ------
    –ò–ª—å—è, –ò—é–ª—å 2025
    """
    gs = get_gspread_client()

    spreadsheet = gs.open(tables_names()['wb_matrix_complete'])
    sheets = spreadsheet.worksheet(sheets_names()['tariffs_box_api'])

    headers = {
        "Authorization": os.getenv('Rachel').strip()
    }

    params = {
        "date": '2025-01-01'
    }

    res = requests.get(url=get_requests_url_wb()[
                       'tariffs_box'], headers=headers, params=params)

    result = res.json()

    box = pd.DataFrame(result['response']['data']['warehouseList'])

    box['dtNextBox'] = result['response']['data']['dtNextBox']
    box['dtTillMax'] = result['response']['data']['dtTillMax']

    box = box.rename(columns={
        'boxDeliveryAndStorageExpr': '–î–æ—Å—Ç–∞–≤–∫–∞_–∏_—Ö—Ä–∞–Ω–µ–Ω–∏–µ',
        'boxDeliveryBase': '–î–æ—Å—Ç–∞–≤–∫–∞_–±–∞–∑–æ–≤–∞—è',
        'boxDeliveryLiter': '–î–æ—Å—Ç–∞–≤–∫–∞_–∑–∞_–ª–∏—Ç—Ä',
        'boxStorageBase': '–•—Ä–∞–Ω–µ–Ω–∏–µ_–±–∞–∑–∞_–¥–µ–Ω—å',
        'boxStorageLiter': '–•—Ä–∞–Ω–µ–Ω–∏–µ_–∑–∞_–ª–∏—Ç—Ä_–¥–µ–Ω—å',
        'warehouseName': '–°–∫–ª–∞–¥'
    })

    target_col = [col for col in box.columns if col not in box.columns[-3:]]

    box[target_col] = box[target_col].replace('-', 0)

    box[target_col] = box[target_col].replace(',', '.', regex=True)

    box[target_col] = box[target_col].apply(
        pd.to_numeric, errors='coerce').fillna(0)

    sheets.batch_clear(clear_range)
    set_with_dataframe(
        sheets,
        box,
        include_column_header=True,
        include_index=False
    )
    send_tg_message(
        "üì¶ –¢–∞—Ä–∏—Ñ—ã WB –ø–æ –∫–æ—Ä–æ–±–∞–º —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Google –¢–∞–±–ª–∏—Ü–µ")


if __name__ == '__main__':

    send_tg_message("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ –∫–æ—Ä–æ–±–∞–º WB")
    tariffs_for_boxes()

    send_tg_message("‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ –∫–æ—Ä–æ–±–∞–º WB –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
