from scripts.utils.setup_logger import make_logger
import pandas as pd
import numpy as np


logger = make_logger(__name__, use_telegram=True)


def group_advert_and_id(camp_df: pd.DataFrame, ID: pd.DataFrame, name: str) -> pd.DataFrame:
    """_summary_
    —Ñ—É–Ω–∫—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç (merge) –∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç (groupby) –¥–≤–∞ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞, –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∏—Ö –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º

    Args:
        camp_df (_type_): DataFrame —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥

        ID (_type_): DataFrame –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ get_cards() –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ test.py, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
                     —Ç–æ–≤–∞—Ä–æ–≤ —Å idkt (idkt - —ç—Ç–æ id —Å–∫–ª–µ–π–∫–∏ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ wb)

        name (_type_): –∏–º—è –∫–∞–±–∏–Ω–µ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞

    Returns:
        _type_: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç DataFrame –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º
    """

    ID['updatedAt'] = pd.to_datetime(ID['updatedAt'])

    latest_idkt = (
        ID.sort_values('updatedAt').drop_duplicates(
            subset='–ê—Ä—Ç–∏–∫—É–ª WB', keep='last').reset_index(drop=True)
    )
    camp_df['date'] = pd.to_datetime(camp_df['date']).dt.date

    camp_df['–ù–µ–¥–µ–ª—è'] = pd.to_datetime(camp_df['date']).dt.isocalendar().week
    camp_df = camp_df.rename(columns={'sum': 'expenses'})

    camp_df.drop(columns=['date'], inplace=True)

    logger.info(
        f"{name}üí∞ –°—É–º–º–∞ –î–û merge: {camp_df['expenses'].sum():,.2f} ‚ÇΩ\033[0m\n\033[93müîç –°—Ç—Ä–æ–∫ –¥–æ merge: {len(camp_df)}")

    camp_df = pd.merge(
        camp_df.rename(columns={'nmId': '–ê—Ä—Ç–∏–∫—É–ª WB'}),
        latest_idkt.rename(columns={'ID KT': 'ID'}),
        left_on='–ê—Ä—Ç–∏–∫—É–ª WB',
        right_on='–ê—Ä—Ç–∏–∫—É–ª WB',
        how='left'
    )

    logger.info(
        f"üí• –°—É–º–º–∞ –ü–û–°–õ–ï merge: {camp_df['expenses'].sum():,.2f} ‚ÇΩ\033[0m\n\033[93müîç –°—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ merge: {len(camp_df)}")

    camp_df['ID'] = pd.to_numeric(
        camp_df['ID'], errors='coerce').fillna(0).astype(int)

    result = camp_df.groupby(['ID', '–ù–µ–¥–µ–ª—è', '–ê—Ä—Ç–∏–∫—É–ª WB']).agg({
        'views': 'sum',
        'clicks': 'sum',
        'atbs': 'sum',
        'orders': 'sum',
        'shks': 'sum',
        'sum_price': 'sum',
        'expenses': 'sum'
    }).reset_index()

    result = result.drop_duplicates()

    result = result.rename(columns={
        'views': '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã',
        'clicks': '–ü–µ—Ä–µ—Ö–æ–¥—ã',
        'atbs': '–î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É',
        'orders': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤',
        'shks': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤',
        'sum_price': '–°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤',
        'expenses': '–†–∞—Å—Ö–æ–¥,–†'
    })

    result['CTR'] = np.where(
        result['–ü—Ä–æ—Å–º–æ—Ç—Ä—ã'] == 0,
        0,
        (
            result['–ü–µ—Ä–µ—Ö–æ–¥—ã'] / result['–ü—Ä–æ—Å–º–æ—Ç—Ä—ã']
        ).round(3)
    )

    result = result.filter(['ID', '–ù–µ–¥–µ–ª—è', '–†–∞—Å—Ö–æ–¥,–†', '–ê—Ä—Ç–∏–∫—É–ª WB', 'CTR'])

    logger.info(
        f"üéØ –ê–≥—Ä–µ–≥–∞—Ü–∏—è –ø–æ ID –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è {name}!\n {result['–†–∞—Å—Ö–æ–¥,–†'].sum():,.2f}"
    )

    return result
