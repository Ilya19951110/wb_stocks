from scripts.utils.telegram_logger import send_tg_message
from scripts.utils.setup_logger import make_logger
import pandas as pd

logger = make_logger(__name__, use_telegram=False)


def merge_and_transform_stocks_with_idkt(stocks: pd.DataFrame, IDKT: pd.DataFrame, name: str) -> tuple[pd.DataFrame, pd.DataFrame]:
    """
    üì¶ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ WB —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–µ–π, –æ—á–∏—Å—Ç–∫–æ–π –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.

    –§—É–Ω–∫—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –æ—Å—Ç–∞—Ç–∫–æ–≤ `stocks` —Å —Ç–∞–±–ª–∏—Ü–µ–π –∫–∞—Ä—Ç–æ—á–µ–∫ `IDKT` –ø–æ –∫–ª—é—á–∞–º `–ê—Ä—Ç–∏–∫—É–ª WB` –∏ `–ë–∞—Ä–∫–æ–¥`.
    –ü–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –∫ –µ–¥–∏–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É, —É–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏, –∞–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –∏ –≥–æ—Ç–æ–≤–∏—Ç –¥–≤–∞ –∏—Ç–æ–≥–æ–≤—ã—Ö
    –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞:
    - `result` ‚Äî –æ—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å ID KT –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏;
    - `seller_article` ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è `–ê—Ä—Ç–∏–∫—É–ª WB` ‚Üî `–ë–∞—Ä–∫–æ–¥` ‚Üî `–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞`.

    ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

    üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    -------------
    stocks : pd.DataFrame
        –¢–∞–±–ª–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º WB –∏ –±–∞—Ä–∫–æ–¥–∞–º. –°–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è –≤—Ä–æ–¥–µ:
        - '–ê—Ä—Ç–∏–∫—É–ª WB', '–ë–∞—Ä–∫–æ–¥', '–†–∞–∑–º–µ—Ä', '–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞', '–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏' –∏ –¥—Ä.

    IDKT : pd.DataFrame
        –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å `ID KT`, –≥–∞–±–∞—Ä–∏—Ç–∞–º–∏, —Ñ–æ—Ç–æ, –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è–º–∏ –∏ –±–∞—Ä–∫–æ–¥–∞–º–∏.

    name : str
        –ò–º—è –∫–∞–±–∏–Ω–µ—Ç–∞ (–¥–ª—è –ª–æ–≥–æ–≤ –∏ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π).

    üì§ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    --------------
    Tuple[pd.DataFrame, pd.DataFrame]
        - –ü–µ—Ä–≤—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º `result`: –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å `ID KT`, —Ü–µ–Ω–∞–º–∏, –≥–∞–±–∞—Ä–∏—Ç–∞–º–∏ –∏ —Ç.–ø.
        - –í—Ç–æ—Ä–æ–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º `seller_article`: —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–π `–ê—Ä—Ç–∏–∫—É–ª WB`, `–ë–∞—Ä–∫–æ–¥`, `–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞`, `–†–∞–∑–º–µ—Ä`.

    üß™ –û—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏:
    ---------------------------
    1. –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ (`int`, `str`) –¥–ª—è –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫.
    2. Merge –ø–æ ['–ê—Ä—Ç–∏–∫—É–ª WB', '–ë–∞—Ä–∫–æ–¥'] —Å outer join.
    3. –û—á–∏—Å—Ç–∫–∞ –º—É—Å–æ—Ä–∞: —É–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫, –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, NaN.
    4. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤.
    5. –†–∞—Å—á—ë—Ç `–¶–µ–Ω–∞ –¥–æ –°–ü–ü`.
    6. –í—ã–¥–µ–ª–µ–Ω–∏–µ `seller_article`.
    7. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞.

    ‚ö†Ô∏è –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    ---------------
    - –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ (`right_only`), –æ–Ω–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ –∫–æ—Å—è—á–Ω—ã–µ.
    - –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ '-'.
    - –í Telegram –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö.
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ `result`.

    üß† –ê–≤—Ç–æ—Ä: –ò–ª—å—è  
    üóì –í–µ—Ä—Å–∏—è: –ò—é–ª—å 2025
    """

    send_tg_message(
        f"üöÄ –ó–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è merge_and_transform_stocks_with_idkt –¥–ª—è –∫–∞–±–∏–Ω–µ—Ç–∞: {name}")
    try:
        logger.info(
            "üìä –ü—Ä–∏–≤–æ–¥–∏–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö [–ê—Ä—Ç–∏–∫—É–ª WB, –ë–∞—Ä–∫–æ–¥, –†–∞–∑–º–µ—Ä, ID KT]...")

        type_map = {
            '–ê—Ä—Ç–∏–∫—É–ª WB': int,
            '–ë–∞—Ä–∫–æ–¥': str,
            '–†–∞–∑–º–µ—Ä': str
        }
        for df in [stocks, IDKT]:
            for col, dtype in type_map.items():
                df[col] = df[col].astype(dtype)

        IDKT['ID KT'] = IDKT['ID KT'].astype(int)

        logger.info("‚úÖ –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã!")
    except Exception as e:
        msg = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤–µ—Å—Ç–∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö {name}: {e}"
        send_tg_message(msg)
        logger.error(msg)
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã –æ—Å—Ç–∞—Ç–∫–∏ —Ü–µ–ø–ª—è–µ–º –∫ idkt
    try:
        logger.info("üîó –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü (merge)...")

        result = pd.merge(
            IDKT,
            stocks,
            on=['–ê—Ä—Ç–∏–∫—É–ª WB', '–ë–∞—Ä–∫–æ–¥'],
            how='outer',
            indicator=True,
            suffixes=('_IDKT', '_stocks')
        )
        logger.info("‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        msg = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã: {e}"
        send_tg_message(msg)
        logger.error(msg)

    try:
        logger.info("üßπ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö...")
        # –£–¥–∞–ª—è–µ–º –Ω–µ –Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã
        result = result.drop(columns=[col for col in result.columns if col.endswith('_stocks')]+['–î–∞—Ç–∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è', 'warehouseName',
                                                                                                 'quantity', 'inWayToClient', 'inWayFromClient',
                                                                                                 'category', 'subject', 'isRealization', 'SCCode', 'isSupply'], errors='ignore')

        # —É–¥–∞–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å—ã _IDKT —É —Å—Ç–æ–ª–±—Ü–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–ª–∏—Å—å
        result.columns = [
            col.replace('_IDKT', '') for col in result.columns
        ]

        # –≤—ã–±–∏—Ä–∞–µ–º —Å—Ç–æ–ª–±—Ü—ã
        num_col = ['–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞',
                   '–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏', '–®–∏—Ä–∏–Ω–∞', '–í—ã—Å–æ—Ç–∞', '–î–ª–∏–Ω–∞']
        string_cols = ['–ë—Ä–µ–Ω–¥', '–†–∞–∑–º–µ—Ä', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ',
                       ]

        # –ó–∞–ø–æ–ª–Ω—è–µ–º NAN –≤ –¶–µ–Ω–∞ –∏ –°–∫–∏–¥–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∑–Ω–∞—á –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞
        result[['–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞']] = result.groupby(
            '–ê—Ä—Ç–∏–∫—É–ª WB')[['–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞']].ffill()
        # –∑–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç–æ—Ç—ã –Ω—É–∂–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        result[num_col] = result[num_col].fillna(0)
        result[string_cols] = result[string_cols].fillna('-')

        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ stocks –æ—Å—Ç–∞—Ç–∫–∏
        right_only_rows = result[result['_merge'] == 'right_only']

        # –≤ –æ—Å–Ω–æ–Ω–æ–º –¥—Ñ —É–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∞–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ, –æ–Ω–∏ –∫–æ—Å—è—á–Ω—ã–µ
        result = result[result['_merge'] != 'right_only']

        # —É–¥–∞–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü _merge
        result = result.drop(columns='_merge')

        # –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç–æ–ª–±—Ü—É –∏—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏
        result = result.groupby([
            col for col in result.columns if col != '–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏'
        ])['–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏'].sum().reset_index()

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –¶–µ–Ω–∞ –¥–æ –°–ü–ü
        result['–¶–µ–Ω–∞ –¥–æ –°–ü–ü'] = result['–¶–µ–Ω–∞'] * \
            (1 - result['–°–∫–∏–¥–∫–∞']/100)

        # –¥—Ñ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º –∏ –±–∞—Ä–∫–æ–¥–æ–º

        seller_article = result.filter([
            '–ê—Ä—Ç–∏–∫—É–ª WB', '–ë–∞—Ä–∫–æ–¥', '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–†–∞–∑–º–µ—Ä'
        ])

        result = result.drop(columns=[
            '–ë–∞—Ä–∫–æ–¥', '–†–∞–∑–º–µ—Ä'
        ])

        result[['–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞', '–¶–µ–Ω–∞ –¥–æ –°–ü–ü']] = result.groupby(
            '–ê—Ä—Ç–∏–∫—É–ª WB')[['–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞', '–¶–µ–Ω–∞ –¥–æ –°–ü–ü']].transform('first')

        # –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ —Å—É–º–º–µ –æ—Å—Ç–∞—Ç–∫–æ–≤
        result = result.groupby([
            col for col in result.columns if col != '–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏'
        ])['–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏'].sum().reset_index()

        new_order = [
            '–ê—Ä—Ç–∏–∫—É–ª WB', 'ID KT', '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–ë—Ä–µ–Ω–¥', '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
            '–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏', '–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞', '–¶–µ–Ω–∞ –¥–æ –°–ü–ü', '–§–æ—Ç–æ', '–®–∏—Ä–∏–Ω–∞', '–í—ã—Å–æ—Ç–∞', '–î–ª–∏–Ω–∞'
        ]

        # –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        result = result[new_order]

        result = result.sort_values('–ò—Ç–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∏', ascending=False)
        result['–ö–∞–±–∏–Ω–µ—Ç'] = name

        if len(right_only_rows) > 0:
            logger.warning(
                f"–∫–æ—Å—è—á–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–∞–±–∏–Ω–µ—Ç–∞ {name} =  {right_only_rows.shape}\n{right_only_rows['–ê—Ä—Ç–∏–∫—É–ª WB'].to_list()}")

        else:
            logger.info(f"‚úÖ –ö–æ—Å—è—á–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ {name} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        logger.warning(
            f"üü¢ –ï—Å—Ç—å –ª–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ {name}?: {result.duplicated().any()}\n"
            f"üì¶ –ö–æ–ª–æ–Ω–∫–∏ barcode_nmid: {seller_article.columns.tolist()}"
        )

    except Exception as e:
        msg = f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"
        send_tg_message(msg)
        logger.error(msg)

    send_tg_message(
        f"‚úÖ merge_and_transform_stocks_with_idkt –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è {name}, —Å—Ç—Ä–æ–∫: {len(result)}")

    return result, seller_article
