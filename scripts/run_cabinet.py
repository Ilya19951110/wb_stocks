
from scripts.get_cards_list import get_cards
import pandas as pd
from dotenv import load_dotenv
from scripts.setup_logger import make_logger
load_dotenv()
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Å—Ç–æ–π –ª–∏ –¥–∞—Ç–∞ —Ñ—Ä–µ–π–º
logger = make_logger(__name__)


async def execute_run_cabinet(name, api, session, func_name=None):
    """
    üß† –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ –∫–∞–±–∏–Ω–µ—Ç–∞–º (WB)

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–ª—É–∂–∏—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–æ–º –¥–ª—è –≤—ã–∑–æ–≤–∞ –æ–¥–Ω–æ–π –∏–∑ —Ç—Ä—ë—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:
    - –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ (`get_stocks`)
    - –û—Ç—á—ë—Ç –ø–æ –≤–æ—Ä–æ–Ω–∫–µ –ø—Ä–æ–¥–∞–∂ (`report_detail`)
    - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π (`campaign_query`)

    –û–Ω–∞:
    ‚ñ™ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç `func_name`
    ‚ñ™ –ø–æ–ª—É—á–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (ID/IDKT) —á–µ—Ä–µ–∑ `get_cards()`
    ‚ñ™ –≤—ã–∑—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ì–∞–ª–∏–ª–æ–≤–∞', '–ê–∑–∞—Ä—è')
        api (Any): –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π API-–æ–±—ä–µ–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, aiohttp.ClientSession)
        session (Any): –°–µ—Å—Å–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WB/Ozon API
        func_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–∑—ã–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (`get_stocks`, `report_detail`, `campaign_query`)

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        tuple[pd.DataFrame, pd.DataFrame] –∏–ª–∏ None:
            - –î–ª—è get_stocks ‚Üí (—Ä–µ–∑—É–ª—å—Ç–∞—Ç, IDKT)
            - –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö  ‚Üí (—Ä–µ–∑—É–ª—å—Ç–∞—Ç, ID)
            - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø—É—Å—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ ‚Üí (empty DataFrames) –∏–ª–∏ None

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
        ValueError: –µ—Å–ª–∏ `func_name` –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
        –õ—é–±—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∏ –ø–æ–¥–∞–≤–ª—è—é—Ç—Å—è (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è None)

    –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
        - scripts.get_cards_list.get_cards
        - scripts.get_sales_funnel.report_detail
        - scripts.get_advertising_report.campaign_query
        - scripts.get_supplier_stocks.get_stocks

    üìå –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        result, ids = await execute_run_cabinet("–ì–∞–ª–∏–ª–æ–≤–∞", api=api, session=session, func_name="get_stocks")
    """

    logger.debug(f"üß™ DEBUG: FUNC_NAME = {func_name.upper()}")

    from scripts.get_sales_funnel import report_detail
    from scripts.get_advertising_report import campaign_query
    from scripts.get_supplier_stocks import get_stocks

    allowed = {
        'get_stocks': get_stocks,
        'report_detail': report_detail,
        'campaign_query': campaign_query
    }

    if func_name not in allowed:
        message = f"‚ùå func_name '{func_name}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {list(allowed.keys())}"
        logger.error(message)
        raise ValueError(message)

    try:
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é get_cards –¥–ª—è: {name}")
        IDKT, ID = await get_cards(name=name, api=api, session=session)

        if IDKT.empty or ID.empty:
            logger.warning(f"IDKT - –ø—É—Å—Ç–æ–π!!")
            return pd.DataFrame(), pd.DataFrame()

        logger.info(
            f"‚úÖ get_cards –∑–∞–≤–µ—Ä—à—ë–Ω: {name}, {len(ID)} –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–ª—É—á–µ–Ω–æ")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ IDKT –∫–∞–±–∏–Ω–µ—Ç–∞: {name}: {e}")
        return pd.DataFrame(), pd.DataFrame()

    func = allowed[func_name.lower()]

    try:
        logger.debug(
            f"üü¢ –ó–∞–ø—É—Å–∫–∞—é `{func_name}` –¥–ª—è –∫–∞–±–∏–Ω–µ—Ç–∞ `{name}`")

        logger.debug(f"üß™ DEBUG: SELECTED FUNCTION = {func.__name__.upper()}")

        result = await func(name=name, api=api, session=session)

        logger.info(f"‚úÖ `{func_name}` —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ –¥–ª—è `{name}`")
        logger.info(f"üèÅ –ö–∞–±–∏–Ω–µ—Ç `{name}` –∑–∞–≤–µ—Ä—à—ë–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")

        if func_name == 'get_stocks':
            return result, IDKT

        else:
            return result, ID

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ `{func_name}` –¥–ª—è `{name}`: {e}")
        return pd.DataFrame(), pd.DataFrame()
