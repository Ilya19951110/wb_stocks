from scripts.utils.request_block_nmId import get_block_nmId
from scripts.utils.setup_logger import make_logger
from scripts.utils.gspread_client import get_gspread_client
from gspread_dataframe import set_with_dataframe
import pandas as pd

logger = make_logger(__name__, use_telegram=True)


def push_concat_all_cabinet_stocks_to_sheets(
    data: list[pd.DataFrame],
    sheet_name: str,
    sh='–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ü–æ–ª–Ω–∞—è',
    clear_range=None,
    block_nmid=None
):

    try:
        logger.info('üîå –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ Google Sheets –∫–ª–∏–µ–Ω—Ç—É...')

        gs = get_gspread_client()
        logger.info('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Google Sheets!')

    except Exception:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Google Sheets")
        return

    try:
        spreadsheet = gs.open(sh)
        worksheet = spreadsheet.worksheet(sheet_name)

        if block_nmid:
            logger.info(f'block_nmid –¥–ª–∏–Ω–∞ {len(block_nmid)}')
            df_combined = pd.concat(data, ignore_index=True)

            df_combined = df_combined[~df_combined['–ê—Ä—Ç–∏–∫—É–ª WB'].isin(
                block_nmid)]

            logger.info(f"üìä –û–±—ä–µ–¥–∏–Ω–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(df_combined)}")

        else:
            df_combined = pd.concat(data, ignore_index=True)
            logger.info(f"üìä –û–±—ä–µ–¥–∏–Ω–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(df_combined)}")

        if clear_range:
            worksheet.batch_clear(clear_range)
            logger.info(
                f"üßº –û—á–∏—â–µ–Ω –¥–∏–∞–ø–∞–∑–æ–Ω {clear_range} –≤ –ª–∏—Å—Ç–µ '{sheet_name}'")

        else:
            worksheet.clear()
            logger.info(f"üßº –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω –ª–∏—Å—Ç '{sheet_name}'")

        # set_with_dataframe(
        #     worksheet,
        #     df_combined,
        #     row=1,
        #     col=1,
        #     include_column_header=True,
        #     include_index=False
        # )
        worksheet.update(

            values=[df_combined.columns.values.tolist()] +
            df_combined.values.tolist()
        )

        logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –≤ –ª–∏—Å—Ç '{sheet_name}'")
    except Exception:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç '{sheet_name}'")
