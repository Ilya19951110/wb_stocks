import pandas as pd
from collections import defaultdict
from scripts.utils.setup_logger import make_logger
from scripts.utils.gspread_client import get_gspread_client
from gspread_dataframe import set_with_dataframe
from scripts.utils.config.factory import get_group_map

logger = make_logger(__name__, use_telegram=True)


def update_barcode(data: dict[str, tuple[pd.DataFrame, pd.DataFrame, pd.DataFrame]],
                   sheet_name='API WB barcode', clear_range: list[str] = None) -> None:

    MAP = get_group_map()
    grouped_df = defaultdict(pd.DataFrame)

    if clear_range is None:
        clear_range = ['A:C']
    try:
        logger.info('üîå –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ Google Sheets –∫–ª–∏–µ–Ω—Ç—É...')
        gs = get_gspread_client()

        logger.info('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    except Exception:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Google Sheets")
        return

    for name, (_, _, barcode) in data.items():
        for sheet, people in MAP.items():
            if name in people:
                grouped_df[sheet] = pd.concat(
                    [grouped_df[sheet], barcode], ignore_index=True)

    logger.info("üìä –î–∞–Ω–Ω—ã–µ –±–∞—Ä–∫–æ–¥–æ–≤ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Ç–∞–±–ª–∏—Ü–∞–º")

    # === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—ã ===
    for sheet, df_barcode in grouped_df.items():
        try:
            logger.info(f'üìÇ –û—Ç–∫—Ä—ã–≤–∞—é —Ç–∞–±–ª–∏—Ü—É: "{sheet}"')
            spreadsheet = gs.open(sheet)

            logger.info(f'üìÑ –û—Ç–∫—Ä—ã–≤–∞—é –ª–∏—Å—Ç: "{sheet_name}"')
            worksheet = spreadsheet.worksheet(sheet_name)

            logger.info(
                f'üßº –û—á–∏—â–∞—é –¥–∏–∞–ø–∞–∑–æ–Ω {clear_range} –≤ –ª–∏—Å—Ç–µ "{sheet_name}"')
            worksheet.batch_clear(clear_range)

            logger.info(
                f'‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∂–∞—é {len(df_barcode)} —Å—Ç—Ä–æ–∫ –≤ –ª–∏—Å—Ç "{sheet_name}" —Ç–∞–±–ª–∏—Ü—ã "{sheet}"')
            set_with_dataframe(
                worksheet,
                df_barcode,
                col=1,
                row=1,
                include_column_header=True,
                include_index=False
            )

            logger.info(
                f'‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ "{sheet}" ‚Üí "{sheet_name}"')
        except Exception:
            logger.exception(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É '{sheet}' (–ª–∏—Å—Ç '{sheet_name}')")

    logger.info("üèÅ –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –±–∞—Ä–∫–æ–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
