"""
    üì§ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ Google –¢–∞–±–ª–∏—Ü—ã.

    –î–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤ (–ø–æ –∫–ª—é—á—É `dict_data`) –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –æ–±—â–∏–º –∏—Ç–æ–≥–æ–≤—ã–º —Ç–∞–±–ª–∏—Ü–∞–º
    —Å–æ–≥–ª–∞—Å–Ω–æ –∫–∞—Ä—Ç–µ `GROUP_MAP`, –∞ –∑–∞—Ç–µ–º –≤—ã–≥—Ä—É–∂–∞—é—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ª–∏—Å—Ç Google –¢–∞–±–ª–∏—Ü—ã (worksheet_name).

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    ----------
    dict_data : Dict[str, pd.DataFrame]
        –°–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á ‚Äî –∏–º—è –∫–∞–±–∏–Ω–µ—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π DataFrame —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏.

    worksheet_name : str
        –ò–º—è –ª–∏—Å—Ç–∞ –≤ Google –¢–∞–±–ª–∏—Ü–µ, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ.

    –ö–∞—Ä—Ç–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏:
    ------------------
    GROUP_MAP –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–∏–µ –∫–∞–±–∏–Ω–µ—Ç—ã (–∏–º–µ–Ω–∞) –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è –≤ –∫–∞–∫—É—é –∏—Ç–æ–≥–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É:
        {
            '–§–∏–Ω –º–æ–¥–µ–ª—å –ò–æ—Å–∏—Ñ–æ–≤—ã –† –ê –ú': ['–ê–∑–∞—Ä—å—è', '–†–∞—Ö–µ–ª—å', '–ú–∏—Ö–∞–∏–ª'],
            '–§–∏–Ω –º–æ–¥–µ–ª—å –ì–∞–ª–∏–ª–æ–≤–∞': ['–ì–∞–ª–∏–ª–æ–≤–∞'],
            '–§–∏–Ω –º–æ–¥–µ–ª—å –ú–∞—Ä—Ç—ã–Ω–µ–Ω–∫–æ –∏ –¢–æ—Ä–≥–º–∞–∫—Å–∏–º—É–º': ['–ú–∞—Ä—Ç—ã–Ω–µ–Ω–∫–æ', '–¢–æ—Ä–≥–º–∞–∫—Å–∏–º—É–º']
        }

    –ü—Ä–æ—Ü–µ—Å—Å:
    --------
    1. –î–∞–Ω–Ω—ã–µ –∏–∑ dict_data –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å GROUP_MAP.
    2. –î–ª—è –∫–∞–∂–¥–æ–π –∏—Ç–æ–≥–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã:
        - –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Google Sheets API.
        - –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –ª–∏—Å—Ç–∞, –æ–Ω —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è.
        - –î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    -----------
    None

    –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
    ------------
    - gspread
    - pandas
    - gspread_client.get_gspread_client()

    –ü—Ä–∏–º–µ—Ä:
    -------
        save_in_gsh(dict_data=—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_–ø–æ_–∫–∞–±–∏–Ω–µ—Ç–∞–º, worksheet_name="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    """

from scripts.utils.config.factory import get_group_map
from scripts.utils.gspread_client import get_gspread_client
import pandas as pd


def save_in_gsh(dict_data: dict[str, pd.DataFrame], worksheet_name: str) -> None:

    def goup_by_sheet(data: dict[str, pd.DataFrame], MAP: dict[str, list[str]]) -> dict[str, pd.DataFrame]:
        result = {}

        for table, people in MAP.items():
            res = [data[name] for name in people if name in data]

            if not res:
                print(f'‚ö†Ô∏è {table}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏')
                continue

            result[table] = pd.concat(res, ignore_index=True)
        print('üöÄüöÄ –î–∞–Ω–Ω—ã–µ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã!')
        return result

    def update_sheet(group: dict[str, pd.DataFrame], worksheet_name: str) -> None:
        gs = get_gspread_client()

        for name, df in group.items():
            sh = gs.open(name)
            worksheet = sh.worksheet(worksheet_name)

            existing = worksheet.get_all_values()
            start_row = len(existing) + 1 if existing else 1

            current_rows = worksheet.row_count
            current_cols = worksheet.col_count

            req_rows = len(df) + start_row
            req_cols = df.shape[1]

            if req_cols > current_cols or req_rows > current_rows:

                worksheet.resize(
                    rows=max(req_rows, current_rows),
                    cols=max(req_cols, current_cols)
                )

            print(
                f"üì§ –ö–∞–±–∏–Ω–µ—Ç {name} –î–æ–±–∞–≤–ª—è—é {len(df)} —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É '{worksheet_name}' –Ω–∞—á–∏–Ω–∞—è —Å A{start_row}")

            worksheet.update(
                range_name=f"A{start_row}",
                values=df.values.tolist())

        print('üì§ –î–∞–Ω–Ω—ã–µ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É!üöÄüöÄ')

    grouped = goup_by_sheet(data=dict_data, MAP=get_group_map())
    update_sheet(grouped, worksheet_name=worksheet_name)
